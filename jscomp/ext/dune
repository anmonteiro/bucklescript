(library
 (name ext)
 (wrapped false)
 (flags
  (:standard -w -9-50))
 (libraries bs_hash_stubs compiler-libs.common))

(rule
 (targets js_reserved_map.ml)
 (deps ../../scripts/build_sorted.ml ../keywords.list)
 (action
  (with-stdout-to
   %{targets}
   (run %{bin:ocaml} %{deps}))))

(rule
 (targets hash_set_string.ml)
 (deps hash_set.cppo.ml)
 (action
  (run %{bin:cppo} -V OCAML:4.06.1+BS -D TYPE_STRING %{deps} -o %{targets})))

(rule
 (targets hash_set_int.ml)
 (deps hash_set.cppo.ml)
 (action
  (run %{bin:cppo} -V OCAML:4.06.1+BS -D TYPE_INT %{deps} -o %{targets})))

(rule
 (targets hash_set_ident.ml)
 (deps hash_set.cppo.ml)
 (action
  (run %{bin:cppo} -V OCAML:4.06.1+BS -D TYPE_IDENT %{deps} -o %{targets})))

(rule
 (targets hash_set.ml)
 (deps hash_set.cppo.ml)
 (action
  (run %{bin:cppo} -V OCAML:4.06.1+BS -D TYPE_FUNCTOR %{deps} -o %{targets})))

(rule
 (targets hash_set_poly.ml)
 (deps hash_set.cppo.ml)
 (action
  (run %{bin:cppo} -V OCAML:4.06.1+BS -D TYPE_POLY %{deps} -o %{targets})))

(rule
 (targets vec_int.ml)
 (deps vec.cppo.ml)
 (action
  (run %{bin:cppo} -V OCAML:4.06.1+BS -D TYPE_INT %{deps} -o %{targets})))

(rule
 (targets vec.ml)
 (deps vec.cppo.ml)
 (action
  (run %{bin:cppo} -V OCAML:4.06.1+BS -D TYPE_FUNCTOR %{deps} -o %{targets})))

(rule
 (targets set_string.ml)
 (deps set.cppo.ml)
 (action
  (run %{bin:cppo} -V OCAML:4.06.1+BS -D TYPE_STRING %{deps} -o %{targets})))

(rule
 (targets set_int.ml)
 (deps set.cppo.ml)
 (action
  (run %{bin:cppo} -V OCAML:4.06.1+BS -D TYPE_INT %{deps} -o %{targets})))

(rule
 (targets set_ident.ml)
 (deps set.cppo.ml)
 (action
  (run %{bin:cppo} -V OCAML:4.06.1+BS -D TYPE_IDENT %{deps} -o %{targets})))

(rule
 (targets map_string.ml)
 (deps map.cppo.ml)
 (action
  (run %{bin:cppo} -V OCAML:4.06.1+BS -D TYPE_STRING %{deps} -o %{targets})))

(rule
 (targets map_int.ml)
 (deps map.cppo.ml)
 (action
  (run %{bin:cppo} -V OCAML:4.06.1+BS -D TYPE_INT %{deps} -o %{targets})))

(rule
 (targets map_ident.ml)
 (deps map.cppo.ml)
 (action
  (run %{bin:cppo} -V OCAML:4.06.1+BS -D TYPE_IDENT %{deps} -o %{targets})))

(rule
 (targets ordered_hash_map_local_ident.ml)
 (deps ordered_hash_map.cppo.ml)
 (action
  (run %{bin:cppo} -V OCAML:4.06.1+BS -D TYPE_LOCAL_IDENT %{deps} -o
    %{targets})))

(rule
 (targets hash_string.ml)
 (deps hash.cppo.ml)
 (action
  (run %{bin:cppo} -V OCAML:4.06.1+BS -D TYPE_STRING %{deps} -o %{targets})))

(rule
 (targets hash_int.ml)
 (deps hash.cppo.ml)
 (action
  (run %{bin:cppo} -V OCAML:4.06.1+BS -D TYPE_INT %{deps} -o %{targets})))

(rule
 (targets hash_ident.ml)
 (deps hash.cppo.ml)
 (action
  (run %{bin:cppo} -V OCAML:4.06.1+BS -D TYPE_IDENT %{deps} -o %{targets})))

(rule
 (targets hash.ml)
 (deps hash.cppo.ml)
 (action
  (run %{bin:cppo} -V OCAML:4.06.1+BS -D TYPE_FUNCTOR %{deps} -o %{targets})))

(ocamllex ext_json_parse)
